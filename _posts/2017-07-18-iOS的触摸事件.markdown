---
layout:     post
title:      "iOS触摸事件和事件响应链"
subtitle:   ""
date:       2017-07-18 19:00:00
author:     "renchao"
header-img: "img/2017.05.03.jpg"
tags: 
   - iOS
---



### iOS触摸事件和事件响应链

#### 事件的产生

**当系统检测到触摸屏幕的事件之后，会将该事件打包成为一个UIEvent对象并放在当前活动的UIApplication管理的事件队列中，然后当前应用会在某个时刻取出该事件并传递给UIWindow。UIWindow对象会使用`hitTest：withEvent:`方法寻找本次触摸事件的所在视图，即第一响应对象。**

在`hitTest：withEvent:`方法中，大概流程是：调用当前视图的`pointInside：withEvent:`方法判断触摸点是否在当前视图，若在则向当前视图的所有子视图发送`hitTest：withEvent:`消息。所有子视图的遍历顺序为最顶层到最底层（因为相比较之下，后添加的view在上面，降低循环次数）。当第一次有子视图返回非空对象，则hitTest方法返回此对象。整个过程相当于是递归的。

**找到合适的视图控件后，就会调用视图控件的touches方法来作具体的事件处理。**

处理事件的响应链为：该视图、父视图、视图控制器、window、application。

> 如果父控件不能接受触摸事件，那么子控件就不可能接收到触摸事件。

> UIView不能接收触摸事件的三种情况：
>
> - **不允许交互**：userInteractionEnabled = NO
> - **隐藏**：如果把父控件隐藏，那么子控件也会隐藏，隐藏的控件不能接受事件
> - **透明度**：如果设置一个控件的透明度<0.01，会直接影响子控件的透明度。alpha：0.0~0.01为透明
>
> 默认UIImageView不能接受触摸事件，因为不允许交互，即userInteractionEnabled = NO，所以如果希望UIImageView可以交互，需要userInteractionEnabled = YES。

这些touches方法的默认做法是将事件顺着响应者链条向上传递（也就是touch方法默认不处理事件，只传递事件），将事件交给上一个响应者进行处理。

#### 事件响应链

**响应者链条：**在iOS程序中无论是最后面的UIWindow还是最前面的某个按钮，它们的摆放是有前后关系的，一个控件可以放到另一个控件上面或下面，那么用户点击某个控件时是触发上面的控件还是下面的控件呢，这种先后关系构成一个链条就叫“响应者链”。也可以说，响应者链是由多个响应者对象连接起来的链条。在iOS中响应者链的关系可以用下图表示：

![img](http://upload-images.jianshu.io/upload_images/1055199-2a49a16e1e483b5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)

- 如果当前这个view是控制器的view,那么控制器就是上一个响应者
- 如果当前这个view不是控制器的view,那么父控件就是上一个响应者

**响应者链的事件传递过程:**

1. 如果当前view是控制器的view，那么控制器就是上一个响应者，事件就传递给控制器；如果当前view不是控制器的view，那么父视图就是当前view的上一个响应者，事件就传递给它的父视图
2. 在视图层次结构的最顶级视图，如果也不能处理收到的事件或消息，则其将事件或消息传递给window对象进行处理
3. 如果window对象也不处理，则其将事件或消息传递给UIApplication对象
4. 如果UIApplication也不能处理该事件或消息，则将其丢弃

**事件的传递和响应的区别：**

事件的传递是从上到下（父控件到子控件），事件的响应是从下到上（顺着响应者链条向上传递：子控件到父控件。