---
layout:     post
title:      "输入网址到显示网页到底经历了什么？"
subtitle:   "RT"
date:       2017-07-13 20:00:00
author:     "Renchao"
header-img: "img/2017.05.03.jpg"
tags: 
   - 网络
---



#### 输入网址到显示网页到底经历了什么？

简单来说就是：1.输入网址 2.域名转IP地址 3.通过IP地址找到对应资源 4.服务器返回资源并显示

详细说，那就是：

1.在浏览器地址栏输入地址，如：www.163.com

2.DNS域名解析。

1. 浏览器缓存中寻找，存储记录有一个固定的时间段，超时则删除记录。
2. 1中没有，则浏览器会做一个系统调用，查找系统缓存。
3. 路由器缓存。
4. ISP（Internet Service Provide，互联网服务提供商）DNS缓存。
5. 递归搜索。ISP的DNS服务器从根域名开始搜索，root->顶级域名服务器（.com）->163所在区域的域名服务器。

3.在应用层，得到了IP地址的浏览器会发送HTTP请求，传递给传输层。

4.然后在传输层通过TCP进行封装数据包。把HTTP会话请求分成报文段，添加源端口和目的端口，如服务器使用80端口监听客户端请求，客户端随机选择一个端口如5000与服务器进行数据交换，服务器会把相应请求返回给客户端的5000端口。

5.在客户端的网络层，主要工作是查找路由表确定如何到达服务器，期间可能经过多个服务器。主要协议有IP、IPX（Internetwork Packet Exchange protocol，互联网数据包交换协议）、RIP（Routing Information Protocol，路由信息协议）、OSPF（开放最短路径优先）等。

6.客户端的链路层，包通过链路层发送给路由器，通过各种协议查找到IP地址的MAC地址，发送ARP（地址解析协议Address Resolution Protocol）请求到目的地址，得到回应后，就可以交换数据。

>  但是会有一个重定向的问题，就是可能服务器给浏览器响应一个301永久重定向响应，这样浏览器就会访问“http://www.facebook.com/” 而非“http://facebook.com/”。
>
>  为什么[服务器](http://www.chinahtml.com/server)一定要重定向而不是直接发会用户想看的网页内容呢？这个问题有好多有意思的答案。
>
>  其中一个原因跟搜索引擎排名有关。你看，如果一个页面有两个地址，就像[HTTP://www.igoro.com/](HTTP://www.igoro.com/) 和[HTTP://igoro.com/](HTTP://igoro.com/)，搜索引擎会认为它们是两个[网站](http://www.chinahtml.com/)，结果造成每一个的搜索链接都减少从而降低排名。而搜索引擎知道301永久重定向是 什么意思，这样就会把访问带www的和不带www的地址归到同一个[网站](http://www.chinahtml.com/)排名下。
>
>  还有一个是用不同的地址会造成缓存友好性变差。当一个页面有好几个名字时，它可能会在缓存里出现好几次。
>
>  所以浏览器会重定向到新网址进行再次请求。

7.发送回来的网址里，还有很多需要再次请求的网址，都要经历刚才所说的这些过程，查找域名，发送请求，重定向等等。但不像动态页面那样，静态文件会允许浏览器对其进行缓存。有的文件可能会不需要与服务器通讯，而从缓存中直接读取。服务器的响应中包含了静态文件保存的期限信息，所以浏览器知道要把它们缓存多长时间。还有，每个响应都可能包含像版本号一样工作的ETag头（被请求变量的实体值）（在SDWebImage中对旧址新图也有同样的处理方法），如果浏览器观察到文件的版本ETag信息已经存在，就马上停止这个文件的传输。

那么有些网址可能是向CDN发送信息。其实就是内容分发网络，利用内容分发网络 （CDN）分发像图片，CSS表和 JavaScript文件这些静态文件。所以，这些文件会在各地很多CDN的数据中心中留下备份。这种技术可以避开高峰高并发的请求压力，传输数据更快，缓解中心服务器的压力。淘宝双十一就是最好的例子。



下图较为全面的介绍了七层模型：

![http://img.my.csdn.net/uploads/201201/5/0_1325744597WM32.gif](http://img.my.csdn.net/uploads/201201/5/0_1325744597WM32.gif)

**物理层**

利用传输介质为数据链路层提供物理连接，实现比特流的透明传输。“透明传送比特流”表示经实际电路传送后的比特流没有发生变化，对传送的比特流来说，这个电路好像是看不见的。

RJ45、CLOCK、IEEE802.3    （中继器，集线器，网关） 

**数据链路层**

负责建立和管理节点间的链路。通过各种控制协议，将有差错的物理信道变为无差错的、能可靠传输数据帧的数据链路。在计算机网络中由于各种干扰的存在，物理链路是不可靠的。因此，这一层的主要功能是**在物理层提供的比特流的基础上，通过差错控制、流量控制方法，使有差错的物理线路变为无差错的数据链路，即提供可靠的通过物理介质传输数据的方法。**

数据链路层的具体工作是接收来自物理层的位流形式的数据，并封装成帧，传送到上一层；同样，也将来自上层的数据帧，拆装为位流形式的数据转发到物理层；并且，还负责处理接收端发回的确认帧的信息，以便提供可靠的数据传输。

PPP、FR、HDLC、VLAN、MAC  （网桥，交换机） 

**网络层**

它是OSI参考模型中最复杂的一层，也是通信子网的最高一层。它在下两层的基础上向资源子网提供服务。其主要任务是：**通过路由选择算法，为报文或分组通过通信子网选择最适当的路径**。该层控制数据链路层与传输层之间的信息转发，建立、维持和终止网络的连接。具体地说，数据链路层的数据在这一层被转换为数据包，然后通过路径选择、分段组合、顺序、进/出路由等控制，将信息从一个网络设备传送到另一个网络设备。

一般地，数据链路层是解决同一网络内节点之间的通信，而网络层主要解决不同子网间的通信。例如在广域网之间通信时，必然会遇到路由（即两节点间可能有多条路径）选择问题。 

在实现网络层功能时，需要解决的主要问题如下：
1.寻址：数据链路层中使用的物理地址（如MAC地址）仅解决网络内部的寻址问题。在不同子网之间通信时，为了识别和找到网络中的设备，每一子网中的设备都会被分配一个唯一的地址。由于各子网使用的物理技术可能不同，因此这个地址应当是逻辑地址（如IP地址）。

2.交换：规定不同的信息交换方式。常见的交换技术有：线路交换技术和存储转发技术，后者又包括报文交换技术和分组交换技术。

3.路由算法：当源节点和目的节点之间存在多条路径时，本层可以根据路由算法，通过网络为数据分组选择最佳路径，并将信息从最合适的路径由发送端传送到接收端。

4.连接服务：与数据链路层流量控制不同的是，前者控制的是网络相邻节点间的流量，后者控制的是从源节点到目的节点间的流量。其目的在于防止阻塞，并进行差错检测。

IP、ICMP、ARP、RARP、OSPF、IPX、RIP、IGRP、（路由器） 

**传输层**

该层的主要任务是：**向用户提供可靠的端到端的差错和流量控制，保证报文的正确传输。**
1.传输连接管理：提供建立、维护和拆除传输连接的功能。传输层在网络层的基础上为高层提供“面向连接”和“面向无连接”的两种服务。
2.处理传输差错：提供可靠的“面向连接”和不太可靠的“面向无连接”的数据传输服务、差错控制和流量控制。在提供“面向连接”服务时，通过这一层传输的数据将由目标设备确认，如果在指定的时间内未收到确认信息，数据将被重发。
3.监控服务质量。

TCP、UDP、SPX 

**会话层**

会话层（Session Layer）是OSI模型的第5层，是用户应用程序和网络之间的接口，主要任务是：**向两个实体的表示层提供建立和使用连接的方法**。将不同实体之间的表示层的连接称为会话。因此会话层的任务就是组织和协调两个会话进程之间的通信，并对数据交换进行管理。

NFS、SQL、NETBIOS、RPC 


**表示层**

表示层（Presentation Layer）是OSI模型的第六层，它对来自应用层的命令和数据进行解释，对各种语法赋予相应的含义，并按照一定的格式传送给会话层。其主要功能是“**处理用户信息的表示问题，如编码、数据格式转换和加密解密**”等。表示层的具体功能如下：
1.数据格式处理：协商和建立数据交换的格式，解决各应用程序之间在数据格式表示上的差异。
2.数据的编码：处理字符集和数字的转换。例如由于用户程序中的数据类型（整型或实型、有符号或无符号等）、用户标识等都可以有不同的表示方式，因此，在设备之间需要具有在不同字符集或格式之间转换的功能。
3.压缩和解压缩：为了减少数据的传输量，这一层还负责数据的压缩与恢复。
4.数据的加密和解密：可以提高网络的安全性。

JPEG、MPEG、ASII 

**应用层**

应用层（Application Layer）是OSI参考模型的最高层，它是计算机用户，以及各种应用程序和网络之间的接口，其功能是**直接向用户提供服务，完成用户希望在网络上完成的各种工作**。它在其他6层工作的基础上，负责完成网络中应用程序与网络操作系统之间的联系，建立与结束使用者之间的联系，并完成网络用户提出的各种网络服务及应用所需的监督、管理和服务等各种协议。此外，该层还负责协调各个应用程序间的工作。
应用层为用户提供的服务和协议有：文件服务、目录服务、文件传输服务（FTP）、远程登录服务（Telnet）、电子邮件服务（E-mail）、打印服务、安全服务、网络管理服务、数据库服务等。上述的各种网络服务由该层的不同应用协议和程序完成，不同的网络操作系统之间在功能、界面、实现技术、对硬件的支持、安全可靠性以及具有的各种应用程序接口等各个方面的差异是很大的。应用层的主要功能如下：
用户接口：应用层是用户与网络，以及应用程序与网络间的直接接口，使得用户能够与网络进行交互式联系。
实现各种服务：该层具有的各种应用程序可以完成和实现用户请求的各种服务。

FTP、DNS、Telnet、SMTP、HTTP、WWW、NFS 

**OSI7层模型的小结**

由于OSI是一个理想的模型，因此一般网络系统只涉及其中的几层，很少有系统能够具有所有的7层，并完全遵循它的规定。

在7层模型中，每一层都提供一个特殊的网络功能。从网络功能的角度观察：下面4层（物理层、数据链路层、网络层和传输层）主要提供数据传输和交换功能，即以节点到节点之间的通信为主；第4层作为上下两部分的桥梁，是整个网络体系结构中最关键的部分；而上3层（会话层、表示层和应用层）则以提供用户与应用程序之间的信息和数据处理功能为主。简言之，下4层主要完成通信子网的功能，上3层主要完成资源子网的功能。